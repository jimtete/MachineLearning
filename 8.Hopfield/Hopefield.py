import numpy as np
import pandas as pd
from matplotlib import pyplot as plt

from hopfield import HopfieldNetwork

##Εισαγωγή τέλειων δεδομένων
data5 = np.array([[-1,-1,-1,-1,-1,-1,-1],
                  [-1,1,1,1,1,1,-1],
                  [-1,1,-1,-1,-1,-1,-1],
                  [-1,1,-1,-1,-1,-1,-1],
                  [-1,1,-1,-1,-1,-1,-1],
                  [-1,1,1,1,1,1,-1],
                  [-1,-1,-1,-1,-1,1,-1],
                  [-1,-1,-1,-1,-1,1,-1],
                  [-1,-1,-1,-1,-1,1,-1],
                  [-1,1,1,1,1,1,-1],
                  [-1,-1,-1,-1,-1,-1,-1]])
data6 = np.array([[-1,-1,-1,-1,-1,-1,-1],
                  [-1,1,1,1,1,1,-1],
                  [-1,1,-1,-1,-1,-1,-1],
                  [-1,1,-1,-1,-1,-1,-1],
                  [-1,1,-1,-1,-1,-1,-1],
                  [-1,1,1,1,1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,1,1,1,1,-1],
                  [-1,-1,-1,-1,-1,-1,-1]])

data8 = np.array([[-1,-1,-1,-1,-1,-1,-1],
                  [-1,1,1,1,1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,1,1,1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,1,1,1,1,-1],
                  [-1,-1,-1,-1,-1,-1,-1]])
data9 = np.array([[-1,-1,-1,-1,-1,-1,-1],
                  [-1,1,1,1,1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,1,1,1,1,-1],
                  [-1,-1,-1,-1,-1,1,-1],
                  [-1,-1,-1,-1,-1,1,-1],
                  [-1,-1,-1,-1,-1,1,-1],
                  [-1,1,1,1,1,1,-1],
                  [-1,-1,-1,-1,-1,-1,-1]])


##Εισαγωγή ατελών δεδομένων
dataValue5 = np.array([[-1,-1,-1,-1,-1,1,-1],
                  [-1,-1,1,1,1,-1,-1],
                  [-1,1,-1,-1,-1,-1,-1],
                  [-1,1,-1,-1,-1,-1,-1],
                  [-1,1,-1,-1,-1,-1,-1],
                  [-1,1,1,1,1,1,-1],
                  [-1,-1,-1,-1,-1,1,-1],
                  [-1,-1,-1,-1,-1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,-1,1,1,1,1,-1],
                  [-1,-1,-1,-1,-1,-1,-1]])

dataValue6 = np.array([[-1,-1,-1,-1,-1,-1,-1],
                  [-1,-1,1,1,1,-1,-1],
                  [-1,1,-1,-1,-1,-1,-1],
                  [-1,1,-1,-1,-1,-1,-1],
                  [-1,1,-1,-1,-1,-1,-1],
                  [-1,1,1,-1,1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,-1,1,1,1,-1,-1],
                  [-1,-1,-1,-1,-1,-1,-1]])

dataValue8 = np.array([[-1,-1,-1,-1,-1,-1,-1],
                  [-1,-1,1,1,1,-1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,1,1,1,-1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,-1,1,1,1,-1,-1],
                  [-1,-1,-1,-1,-1,-1,-1]])

dataValue9 = np.array([[-1,-1,-1,-1,-1,-1,-1],
                  [-1,-1,1,1,1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,-1,-1,-1,1,-1],
                  [-1,1,1,-1,1,1,-1],
                  [-1,-1,-1,-1,-1,1,-1],
                  [-1,-1,-1,-1,-1,-1,-1],
                  [-1,-1,-1,-1,-1,1,-1],
                  [-1,-1,1,1,1,1,-1],
                  [-1,1,-1,-1,-1,-1,-1]])

data = np.zeros((4,77))
data[0,:] = data5.flatten()
data[1,:] = data6.flatten()
data[2,:] = data8.flatten()
data[3,:] = data9.flatten()

dataValue = np.zeros((4,77))
dataValue[0,:] = dataValue5.flatten()
dataValue[1,:] = dataValue6.flatten()
dataValue[2,:] = dataValue8.flatten()
dataValue[3,:] = dataValue9.flatten()

x_train,y_train,x_test,y_test = data,np.array((5,9,8,6)),dataValue,np.array((5,9,8,6))

##Γράφημα 1

index = 0
for Data in x_train:
    index+=1
    coloredX,coloredY = np.array([]),np.array([])
    x=8;
    y=1;
    for i in range(len(Data)):
        x-=1
        if (x==0):
            x=7
            y+=1
        if(Data[i]==1):
            coloredX=np.append(coloredX,x)
            coloredY = np.append(coloredY,y)
    fig = plt.figure()
    fig = plt.title("Στοιχείο: "+str(index)+" με αριθμό : "+str(y_train[index-1]))
    fig = plt.plot(coloredX,coloredY,"ko")
    plt.xlim([-16,24])
    plt.ylim([-16,24])
    
    plt.legend()
    plt.show()
        


        
        
    